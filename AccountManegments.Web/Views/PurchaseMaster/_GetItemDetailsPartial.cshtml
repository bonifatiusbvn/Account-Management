@model List<AccountManagement.DBContext.Models.ViewModels.ItemMaster.POItemDetailsModel>

@foreach (var item in Model)
{
    <tr id="templateRow_@Convert.ToInt64(item.RowNumber + 1)" class="product" data-product-id="@item.ItemId" onclick="updateProductTotalAmount(this)">
        <td scope="row" class="product-id">@Convert.ToInt64(item.RowNumber + 1)</td>
        <td class="text-start" style="width:230px">
            <p id="txtItemName">@item.ItemName</p>
            <input type="hidden" class="form-control bg-light border-0" id="txtItemId" readonly value="@item.ItemId" />
            <input type="hidden" class="form-control bg-light border-0" id="UnitTypeId" readonly value="@item.UnitType" />
        </td>
        <td class="text-start">
            <input type="text" class="form-control bg-light border-0" id="txtHSNcode" value="@item.Hsncode" readonly style="width: 100px;" />
        </td>
        <td class="text-start">
            <div class="">
                @if (item.Quantity == 0)
                {
                    <input type="number" class="product-quantity form-control" id="txtproductquantity" value="1" style="width:110px;">
                }
                else
                {
                    <input type="number" class="product-quantity form-control" id="txtproductquantity" value="@item.Quantity" style="width:110px;">
                }
            </div>
        </td>
        <td class="text-start">
            <div class="position-relative">
                <input type="hidden" id="txtunittype_@item.ItemId" value="@item.UnitType" />
                <select class="form-control" id="txtPOUnitType_@item.ItemId" style="width: 112px;" onclick="PopulateUnitTypeDropdown('@item.ItemId')">
                    <option value="@item.UnitType">@item.UnitTypeName</option>
                </select>
            </div>
        </td>
        <td class="text-start">
            <input type="number" class="form-control bg-light border-0" id="txtproductamount" value="@item.PricePerUnit" min="1" oninput="preventEmptyValue(this)" style="width:125px;" />
        </td>
        <td class="text-start">
            <input type="number" class="form-control bg-light border-0" id="txtgst" value="@item.GstPercentage" max="99" oninput="preventEmptyValue(this)" style="width:125px;" />

        </td>
        <td class="text-start">
            <input type="number" class="form-control border-0" id="txtgstAmount" value="@(Convert.ToDecimal(item.Gstamount).ToString("F2"))" readonly style="width:130px;" />
        </td>
        <td class="text-start">
            <div>
                <input type="number" class="form-control border-0" id="txtproducttotalamount" value="@(Convert.ToDecimal(item.TotalAmount).ToString("F2"))" readonly style="width:140px;" />
            </div>
        </td>
        <td class="product-removal">
            <a class="btn text-primary remove-btn" onclick="removeItem(this)"><i class="lni lni-trash"></i></a>
        </td>
    </tr>
}

<script type="text/javascript">
    document.getElementById('txtproductquantity').addEventListener('input', function () {
        const value = parseFloat(this.value);
        if (value < 0) {
            toastr.warning('Please Enter value greater then zero.');
            this.value = 0.1;
        } else if (value === 0) {
            toastr.warning('Quantity cannot be zero.');
        }
    });
</script>
@section Scripts {

    <script src="~/moduls/purchaserequestscript.js" asp-append-version="true"></script>
}
